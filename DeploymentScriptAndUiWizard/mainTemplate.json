{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.17.1.54307",
      "templateHash": "16455141971694042888"
    }
  },
  "parameters": {
    "uamiName": {
      "type": "string",
      "defaultValue": "mi-deploymentScript-10"
    },
    "userPrincipalName": {
      "type": "string",
      "defaultValue": "john.contoso@hoferlabs.ch"
    },
    "userDisplayName": {
      "type": "string",
      "defaultValue": "John Contoso"
    },
    "groupName": {
      "type": "string",
      "defaultValue": "Sales"
    },
    "groupDescription": {
      "type": "string",
      "defaultValue": "Sales Group"
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "sahoferlabssales"
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS"
    },
    "storageAccountFileShareName": {
      "type": "string",
      "defaultValue": "fshoferlabssales"
    },
    "targetResourceGroup": {
      "type": "string",
      "defaultValue": "rg-target-10"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "aadUserDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "uamiName": {
            "value": "[parameters('uamiName')]"
          },
          "userPrincipalName": {
            "value": "[parameters('userPrincipalName')]"
          },
          "userDisplayName": {
            "value": "[parameters('userDisplayName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "12841128812399406723"
            }
          },
          "parameters": {
            "uamiName": {
              "type": "string"
            },
            "userPrincipalName": {
              "type": "string"
            },
            "userDisplayName": {
              "type": "string"
            },
            "utcValue": {
              "type": "string",
              "defaultValue": "[utcNow()]"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "variables": {
            "$fxv#0": "param(\r\n    [Parameter(Mandatory = $true)][string]$userPrincipalName,\r\n    [Parameter(Mandatory = $true)][string]$userDisplayName\r\n)\r\n\r\n\"#############################################\"\r\n\"# hoferlabs.ch                              #\"\r\n\"# create AAD user (deployment script)       #\"\r\n\"# Version: 0.1                              #\"\r\n\"#############################################\"\r\ntry {\r\n\r\n    \"get access token\"\r\n    $context = Get-AzContext  \r\n    Write-Host \"Connected to Azure with subscription: $($context.Subscription) with $($context.Account.type) $($context.Account.id)\"\r\n\r\n    $token = (Get-AzAccessToken -ResourceUrl \"https://graph.microsoft.com\").Token\r\n\r\n    $authHeader = @{\r\n        'Content-Type'  = 'application/json'\r\n        'Authorization' = 'Bearer ' + $token\r\n        'Resource'      = 'https://graph.microsoft.com'\r\n    }\r\n\r\n    \"check if user exists\"\r\n    $objUser = $null\r\n    $uri = \"https://graph.microsoft.com/beta/users/$userPrincipalName\"\r\n    $objUser = Invoke-RestMethod -Uri $uri -Method Get -Headers $authHeader -StatusCodeVariable \"scv\" -SkipHttpErrorCheck\r\n    If ($scv -eq 200) {\r\n        $result = \"user with id $($objUser.id) already exists.\"\r\n        $result\r\n    }\r\n    Else {\r\n        \"create user $userPrincipalName\"\r\n        $payload = @\"\r\n{\r\n    \"accountEnabled\": false,\r\n    \"displayName\": \"$userDisplayName\",\r\n    \"mailNickname\": \"notSet\",\r\n    \"userPrincipalName\": \"$userPrincipalName\",\r\n    \"passwordProfile\" : {\r\n        \"forceChangePasswordNextSignIn\": true,\r\n        \"password\": \"xWwvJ]6NMw+bWH-d\"\r\n    }\r\n}\r\n\"@\r\n        $uri = \"https://graph.microsoft.com/beta/users\"\r\n        $objUser = Invoke-RestMethod -Uri $uri -Method Post -Headers $authHeader -Body $payload\r\n        $result = \"user with id $($objUser.id) created.\"\r\n        $result\r\n    }\r\n\r\n    # create output\r\n    $DeploymentScriptOutputs = @{}\r\n    $DeploymentScriptOutputs[\"userId\"] = $($objUser.id)\r\n    $DeploymentScriptOutputs[\"result\"] = $result\r\n}\r\ncatch {\r\n    \"error catched:\"\r\n    Write-Output $(Get-Error)\r\n    # create output\r\n    $DeploymentScriptOutputs = @{}\r\n    $DeploymentScriptOutputs[\"result\"] = $(Get-Error).ErrorDetails.Message\r\n}\r\n\r\n\r\n"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "[format('createAadUser-{0}', parameters('utcValue'))]",
              "location": "[parameters('location')]",
              "kind": "AzurePowerShell",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('uamiName')))]": {}
                }
              },
              "properties": {
                "azPowerShellVersion": "8.3",
                "forceUpdateTag": "[parameters('utcValue')]",
                "scriptContent": "[variables('$fxv#0')]",
                "arguments": "[format('-userPrincipalName \\\"{0}\\\" -userDisplayName \\\"{1}\\\"', parameters('userPrincipalName'), parameters('userDisplayName'))]",
                "retentionInterval": "P1D",
                "cleanupPreference": "OnExpiration"
              }
            }
          ],
          "outputs": {
            "userId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', format('createAadUser-{0}', parameters('utcValue'))), '2020-10-01').outputs.userId]"
            },
            "result": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', format('createAadUser-{0}', parameters('utcValue'))), '2020-10-01').outputs.result]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "aadGroupDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "uamiName": {
            "value": "[parameters('uamiName')]"
          },
          "groupName": {
            "value": "[parameters('groupName')]"
          },
          "groupDescription": {
            "value": "[parameters('groupDescription')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "7652907581280702004"
            }
          },
          "parameters": {
            "uamiName": {
              "type": "string"
            },
            "groupName": {
              "type": "string"
            },
            "groupDescription": {
              "type": "string"
            },
            "utcValue": {
              "type": "string",
              "defaultValue": "[utcNow()]"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "variables": {
            "$fxv#0": "param(\r\n    [Parameter(Mandatory = $true)][string]$groupName,\r\n    [Parameter(Mandatory = $true)][string]$groupDescription\r\n)\r\n\r\n\"#############################################\"\r\n\"# hoferlabs.ch                              #\"\r\n\"# create AAD group (deployment script)      #\"\r\n\"# Version: 0.1                              #\"\r\n\"#############################################\"\r\ntry {\r\n\r\n    \"get access token\"\r\n    $context = Get-AzContext  \r\n    Write-Host \"Connected to Azure with subscription: $($context.Subscription) with $($context.Account.type) $($context.Account.id)\"\r\n\r\n    $token = (Get-AzAccessToken -ResourceUrl \"https://graph.microsoft.com\").Token\r\n\r\n    $authHeader = @{\r\n        'Content-Type'     = 'application/json'\r\n        'Authorization'    = 'Bearer ' + $token\r\n        'Resource'         = 'https://graph.microsoft.com'\r\n        'ConsistencyLevel' = 'eventual'\r\n    }\r\n\r\n    \"check if group exists\"\r\n    $objGroup = $null\r\n    $uri = \"https://graph.microsoft.com/beta/groups?`$filter=startswith(displayName,`'$groupName`')\"\r\n    $objGroup = Invoke-RestMethod -Uri $uri -Method Get -Headers $authHeader \r\n    If ($objGroup.value) {\r\n        $result = \"group with id $($objGroup.value.id) already exists.\"\r\n        $result\r\n    }\r\n    Else {\r\n        \"create group $grouPrincipalName\"\r\n        $payload = @\"\r\n{\r\n    \"description\": \"$groupDescription\",\r\n    \"displayName\": \"$groupName\",\r\n    \"isAssignableToRole\": true,\r\n    \"mailEnabled\": false,\r\n    \"mailNickName\": \"NotSet\",\r\n    \"securityEnabled\": true\r\n}\r\n\"@\r\n        $uri = \"https://graph.microsoft.com/beta/groups\"\r\n        $objGroup = Invoke-RestMethod -Uri $uri -Method Post -Headers $authHeader -Body $payload\r\n        $result = \"group with id $($objGroup.id) created.\"\r\n        $result\r\n    }\r\n\r\n    # create output\r\n    $DeploymentScriptOutputs = @{}\r\n    $DeploymentScriptOutputs[\"groupId\"] = $($objGroup.id)\r\n    $DeploymentScriptOutputs[\"result\"] = $result\r\n}\r\ncatch {\r\n    \"error catched:\"\r\n    Write-Output $(Get-Error)\r\n    # create output\r\n    $DeploymentScriptOutputs = @{}\r\n    $DeploymentScriptOutputs[\"result\"] = $(Get-Error).ErrorDetails.Message\r\n}"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "[format('createAadGroup-{0}', parameters('utcValue'))]",
              "location": "[parameters('location')]",
              "kind": "AzurePowerShell",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('uamiName')))]": {}
                }
              },
              "properties": {
                "azPowerShellVersion": "8.3",
                "forceUpdateTag": "[parameters('utcValue')]",
                "scriptContent": "[variables('$fxv#0')]",
                "arguments": "[format('-groupName \\\"{0}\\\" -groupDescription \\\"{1}\\\"', parameters('groupName'), parameters('groupDescription'))]",
                "retentionInterval": "P1D",
                "cleanupPreference": "OnExpiration"
              }
            }
          ],
          "outputs": {
            "groupId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', format('createAadGroup-{0}', parameters('utcValue'))), '2020-10-01').outputs.groupId]"
            },
            "result": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', format('createAadGroup-{0}', parameters('utcValue'))), '2020-10-01').outputs.result]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'aadUserDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "aadGroupMembershipDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "uamiName": {
            "value": "[parameters('uamiName')]"
          },
          "userId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'aadUserDeployment'), '2022-09-01').outputs.userId.value]"
          },
          "groupId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'aadGroupDeployment'), '2022-09-01').outputs.groupId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "10208324553534492918"
            }
          },
          "parameters": {
            "uamiName": {
              "type": "string"
            },
            "userId": {
              "type": "string"
            },
            "groupId": {
              "type": "string"
            },
            "utcValue": {
              "type": "string",
              "defaultValue": "[utcNow()]"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "variables": {
            "$fxv#0": "param(\r\n    [Parameter(Mandatory = $true)][string]$userId,\r\n    [Parameter(Mandatory = $true)][string]$groupId\r\n)\r\n\r\n\"#############################################\"\r\n\"# hoferlabs.ch                              #\"\r\n\"# assign user to group (deployment script)  #\"\r\n\"# Version: 0.1                              #\"\r\n\"#############################################\"\r\ntry {\r\n\r\n    \"get access token\"\r\n    $context = Get-AzContext  \r\n    Write-Host \"Connected to Azure with subscription: $($context.Subscription) with $($context.Account.type) $($context.Account.id)\"\r\n\r\n    $token = (Get-AzAccessToken -ResourceUrl \"https://graph.microsoft.com\").Token\r\n\r\n    $authHeader = @{\r\n        'Content-Type'     = 'application/json'\r\n        'Authorization'    = 'Bearer ' + $token\r\n        'Resource'         = 'https://graph.microsoft.com'\r\n        'ConsistencyLevel' = 'eventual'\r\n    }\r\n\r\n    \"check if group membership already exists\"\r\n    $objGroupAssignment = $null\r\n    $uri = \"https://graph.microsoft.com/beta/users/$userId/memberOf?`$filter=id eq `'$groupId`'\"\r\n    $objGroupAssignment = Invoke-RestMethod -Uri $uri -Method Get -Headers $authHeader -StatusCodeVariable \"scv\" -SkipHttpErrorCheck\r\n    If ($scv -eq 200) {\r\n        $result = \"group membership already exists.\"\r\n        $result\r\n    }\r\n    Else {\r\n        \"create group assignment...\"\r\n        $payload = @\"\r\n{\r\n    \"@odata.id\": \"https://graph.microsoft.com/beta/users/$userId\"\r\n\r\n}\r\n\"@\r\n        $uri = \"https://graph.microsoft.com/beta/groups/$groupId/members/`$ref\"\r\n        $objGroupAssignment = Invoke-RestMethod -Uri $uri -Method Post -Headers $authHeader -Body $payload\r\n        $result = \"group membership created.\"\r\n        $result\r\n    }\r\n\r\n    # create output\r\n    $DeploymentScriptOutputs = @{}\r\n    $DeploymentScriptOutputs[\"result\"] = $result\r\n}\r\ncatch {\r\n    \"error catched:\"\r\n    Write-Output $(Get-Error)\r\n    # create output\r\n    $DeploymentScriptOutputs = @{}\r\n    $DeploymentScriptOutputs[\"result\"] = $(Get-Error).ErrorDetails.Message\r\n}"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "[format('assignAadGroupMembershipToUser-{0}', parameters('utcValue'))]",
              "location": "[parameters('location')]",
              "kind": "AzurePowerShell",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('uamiName')))]": {}
                }
              },
              "properties": {
                "azPowerShellVersion": "8.3",
                "forceUpdateTag": "[parameters('utcValue')]",
                "scriptContent": "[variables('$fxv#0')]",
                "arguments": "[format('-userId \\\"{0}\\\" -groupId \\\"{1}\\\"', parameters('userId'), parameters('groupId'))]",
                "retentionInterval": "P1D",
                "cleanupPreference": "OnExpiration"
              }
            }
          ],
          "outputs": {
            "result": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', format('assignAadGroupMembershipToUser-{0}', parameters('utcValue'))), '2020-10-01').outputs.result]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'aadGroupDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'aadUserDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storageAccountDeployment",
      "resourceGroup": "[parameters('targetResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "15982366179576704516"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string"
            },
            "storageAccountType": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-09-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('storageAccountType')]"
              },
              "kind": "StorageV2",
              "properties": {}
            }
          ],
          "outputs": {
            "storageAccountId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storageAccountFileShareDeployment",
      "resourceGroup": "[parameters('targetResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "storageAccountFileShareName": {
            "value": "[parameters('storageAccountFileShareName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "13186954948201246205"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string"
            },
            "storageAccountFileShareName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/default/{1}', parameters('storageAccountName'), parameters('storageAccountFileShareName'))]",
              "properties": {}
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('targetResourceGroup')), 'Microsoft.Resources/deployments', 'storageAccountDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storageAccountAzureRoleAssignmentDeployment",
      "resourceGroup": "[parameters('targetResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "prinipalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'aadGroupDeployment'), '2022-09-01').outputs.groupId.value]"
          },
          "roleDefinitionId": {
            "value": "0c867c2a-1d8c-454a-a3db-ab2ea1bdc8bb"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "18160013879629109441"
            }
          },
          "parameters": {
            "roleDefinitionId": {
              "type": "string"
            },
            "prinipalId": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
              "name": "[guid(parameters('roleDefinitionId'), parameters('prinipalId'))]",
              "properties": {
                "roleDefinitionId": "[format('/providers/Microsoft.Authorization/roleDefinitions/{0}', parameters('roleDefinitionId'))]",
                "principalId": "[parameters('prinipalId')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'aadGroupDeployment')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('targetResourceGroup')), 'Microsoft.Resources/deployments', 'storageAccountFileShareDeployment')]"
      ]
    }
  ]
}